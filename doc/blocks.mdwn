## Blockchain

### Receiving Blocks

Blocks contain multiple transactions.  For the most part those transactions
can be handled exactly as unchained transaction receipt is handled.

Since it is impossible to have a transaction be different inside and
outside a block (since it is identified by its own hash), it's easy to
move an orphan transaction into a block when the block is received.  We
just fill in the ContainingBlockID field for the transaction record we
already have.

### Generating Blocks

Apart from all the maths needed to establish a proof-of-work, we need to
know what is going in the block.  The answer is: any transaction without
a containing block.

### Block Chains

Blocks are announced by way of an `inv` message with `MSG_BLOCK`; either
spontaneously or as a response to a `getblocks` message.  Either way, the
hashes we are offered in `inv` should be checked against the current
block pool.  If we don't have details of that block (either header or
full block depending on our preference).

It's perfectly possible, and likely, that the block chain will fork.
This happens when two independent nodes each generate a new block at the
same height.  That means that it is possible for a single transaction to
be in multiple blocks.  Therefore we need to update our table
definition:

Transactions:
 - TransactionID
 - LockTime, Version, etc

TransactionBlockJoins
 - BlockID
 - TransactionID

Obviously by implication there is a table of blocks.

Blocks:
 -


